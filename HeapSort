/*
堆排序
*/

#include<iostream>
#include<ctime>
using namespace std;

const int Num = 1000;
void swap(int &a, int &b)
{
	int temp = a;
	a = b;
	b = temp;
}

void MakeHeap(int Array[], int Num, int i)
{
	int left = i << 1;
	int right = left + 1;
	int largest = i;
	if (left < Num && Array[left] > Array[largest])
		largest = left;
	if (right < Num && Array[right] > Array[largest])
		largest = right;
	if (largest != i)
	{
		swap(Array[i], Array[largest]);
		MakeHeap(Array, Num, largest);
	}
}

void HeapSort(int Array[], int Num)
{
	for (int i = Num >> 1; i >= 1; --i)
		MakeHeap(Array, Num, i);
	for (int i = Num - 1; i > 1; --i)
	{
		swap(Array[1], Array[i]);
		MakeHeap(Array, i, 1);
	}
	return;
}


int main()
{
	int heap[Num];
	int i;
	srand((unsigned)time(NULL));
	heap[0] = -1;
	for (i = 1; i < Num; i++)
		heap[i] = rand() % Num;

	HeapSort(heap, Num);

	for (i = 1; i < Num; i++)
	{
		cout << heap[i] << "  ";
		if (i % 15 == 0)
			cout << endl;
	}
	cout << endl;
	system("pause");
	return 0;
}
